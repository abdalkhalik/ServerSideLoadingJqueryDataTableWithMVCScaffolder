<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>

@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    string controller = ViewContext.RouteData.Values["controller"].ToString();
    string action = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = ScaffolderWithJQueryDT.Helper.GetViewName.GetViewTitle(controller, action);
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>@ViewBag.Title @Resources.Global.Added</h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title @Resources.Global.Added</title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<p>
    @Html.ActionLink(Resources.Global.Create, "Create",null, new { @class = "btn btn-info" })
</p>


<div style="margin:30px;">
    <table id="example" class="display" cellspacing="0" width="100%">
        <thead>
            <tr style="text-align:left;">
                <#
					IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
					foreach (PropertyMetadata property in properties) {
						if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
					#>
					<#
							// We do not want to show any association properties for which there is
							// no associated foreign key.
							if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
								continue;
							}
					#>
							<th>
								@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
							</th>
					<#
						}
					}
				#>
            </tr>
        </thead>

        <tfoot>
            <tr style="text-align:left;">
                <#	
					foreach (PropertyMetadata property in properties) {
						if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
					#>
					<#
							// We do not want to show any association properties for which there is
							// no associated foreign key.
							if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
								continue;
							}
					#>
							<th>
								@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
							</th>
					<#
						}
					}
				#>
            </tr>
        </tfoot>
    </table>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {

            $('#example')
                .removeClass('display')
                .addClass('table table-striped table-bordered');
            $('#example').dataTable({
                "processing": true,
                "serverSide": true,
                "info": true,
                "stateSave": true,
                "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],
                "ajax": {
                    "url": "/@ViewContext.RouteData.Values["controller"].ToString()/AjaxGetJsonData",
                    "type": "GET"
                },
                "columns": [
                    <#				
						
					foreach (PropertyMetadata property in properties) {
						if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
					#>
					<#
							// We do not want to show any association properties for which there is
							// no associated foreign key.
							if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
								continue;
							}
					#>
							{ "data": "<#= GetValueExpression(property) #>", "orderable": true },		
					<#
						}
					}
				#>
                ],
                "order": [[0, "asc"]]
            });
        });
    </script>
}

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>





</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>